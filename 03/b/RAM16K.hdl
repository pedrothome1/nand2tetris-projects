// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=la, b=lb, c=lc, d=ld);

    RAM4K(in=in, load=la, address=address[0..11], out=oa);
    RAM4K(in=in, load=lb, address=address[0..11], out=ob);
    RAM4K(in=in, load=lc, address=address[0..11], out=oc);
    RAM4K(in=in, load=ld, address=address[0..11], out=od);

    Mux4Way16(a=oa, b=ob, c=oc, d=od, sel=address[12..13], out=out);

    // ???????????? Testes n√£o estavam 100%

    // DMux8Way(in=load, sel=address[11..13], a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);

    // RAM4K(in=in, load=la, address=address[0..11], out=oa);
    // RAM4K(in=in, load=lb, address=address[0..11], out=ob);
    // RAM4K(in=in, load=lc, address=address[0..11], out=oc);
    // RAM4K(in=in, load=ld, address=address[0..11], out=od);
    // RAM4K(in=in, load=le, address=address[0..11], out=oe);
    // RAM4K(in=in, load=lf, address=address[0..11], out=of);
    // RAM4K(in=in, load=lg, address=address[0..11], out=og);
    // RAM4K(in=in, load=lh, address=address[0..11], out=oh);

    // Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[11..13], out=out);
}