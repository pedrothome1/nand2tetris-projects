// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

 /**
    0  1  2  3  4  5  6  7     000000000
    8  9  10 11 12 13 14 15    000001000
    16 17 18 19 20 21 22 23    000010000
    24 25 26 27 28 29 30 31    000011000
    32 33 34 35 36 37 38 39    000100000
    40 41 42 43 44 45 46 47    000101000
    48 49 50 51 52 53 54 55    000110000
    56 57 58 59 60 61 62 63    000111000

    0                          000000000
    64                         001000000
    128                        010000000
    192                        011000000
    256                        100000000
    320                        101000000
    ...                        110000000
    ...                        111000000
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);

    RAM64(in=in, load=la, address=address[0..5], out=oa);
    RAM64(in=in, load=lb, address=address[0..5], out=ob);
    RAM64(in=in, load=lc, address=address[0..5], out=oc);
    RAM64(in=in, load=ld, address=address[0..5], out=od);
    RAM64(in=in, load=le, address=address[0..5], out=oe);
    RAM64(in=in, load=lf, address=address[0..5], out=of);
    RAM64(in=in, load=lg, address=address[0..5], out=og);
    RAM64(in=in, load=lh, address=address[0..5], out=oh);

    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[6..8], out=out);
}